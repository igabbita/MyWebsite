   1               		.file	"main.c"
   2               		.arch atmega8535
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  69               	.global	delayms
  71               	delayms:
  73               	.Ltext1:
   1:delay.h       **** /*	delay.h
   2:delay.h       **** *******************************************************************************************
   3:delay.h       **** COPYRIGHT(C)Technophilia Systems
   4:delay.h       **** Date:...............31st May 2011
   5:delay.h       **** Author:.............Prasanta Kumar Nayak
   6:delay.h       **** Organization:.......Technophilia Syestems
   7:delay.h       **** compiler:...........WinAVR
   8:delay.h       **** 
   9:delay.h       **** Description:
  10:delay.h       **** 
  11:delay.h       **** 	This header file generates time delay in the form of mili second and micro second
  12:delay.h       **** 	without affecting any interrupts.
  13:delay.h       **** 
  14:delay.h       **** Functions:
  15:delay.h       **** 
  16:delay.h       **** 	delayms();	  	This function provides delay in the form of mili second
  17:delay.h       **** 	delayus();	  	This function provides delay in the form of micro second
  18:delay.h       **** 	
  19:delay.h       **** *******************************************************************************************/
  20:delay.h       **** 
  21:delay.h       **** #ifndef _DELAY_H_
  22:delay.h       **** #define _DELAY_H_
  23:delay.h       **** 
  24:delay.h       **** unsigned int delaycounter1,delaycounter2;
  25:delay.h       **** 
  26:delay.h       **** void delayms(unsigned int delaytime)
  27:delay.h       **** {
  74               	ue end (size=0) */
  76               	.LM1:
  77               		sts (delaycounter1)+1,__zero_reg__
  28:delay.h       **** 	for(delaycounter1=0;delaycounter1<=delaytime;delaycounter1++)
  78               	,27,.LM0-delayms
  79               	.LM0:
  80 0000 1092 0000 	/* prologue: frame size=0 */
  81 0004 1092 0000 	/* prologue end (size=0) */
  83 000a 30E0      	.LM1:
  84               		sts (delaycounter1)+1,__zero_reg__
  85               		sts delaycounter1,__zero_reg__
  86               		ldi r18,lo8(0)
  87 000c 40E0      		ldi r19,hi8(0)
  88 000e 50E0      	.L2:
  29:delay.h       **** 	{
  30:delay.h       **** 		for(delaycounter2=0;delaycounter2<=800;delaycounter2++)
  31:delay.h       **** 		{
  32:delay.h       **** 			asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
  90               	layms
  91               	.LM1:
  92               		sts (delaycounter1)+1,__zero_reg__
  93 0010 0000      		sts delaycounter1,__zero_reg__
  94 0012 0000      		ldi r18,lo8(0)
  95 0014 0000      		ldi r19,hi8(0)
  96 0016 0000      	.L2:
  98 001a 0000      	.LM2:
  33:delay.h       **** 			asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
  99               	LM1:
 100               		sts (delaycounter1)+1,__zero_reg__
 101 001c 0000      		sts delaycounter1,__zero_reg__
 102 001e 0000      		ldi r18,lo8(0)
 103 0020 0000      		ldi r19,hi8(0)
 104 0022 0000      	.L2:
 106 0026 0000      	.LM2:
 107               		ldi r20,lo8(0)
 108 0028 4F5F      		ldi r21,hi8(0)
 109 002a 5F4F      	.L3:
 111               	.LM3:
 112 002c 63E0      	/* #APP */
 113 002e 4132      		nop
 114 0030 5607      		nop
 115 0032 01F4      		nop
 116 0034 2F5F      		nop
 117 0036 3F4F      		nop
 118               		nop
 120 0038 8217      	.LM4:
 121 003a 9307      		nop
 122 003c 00F4      		nop
 123 003e 3093 0000 		nop
 124 0042 2093 0000 		nop
 125 0046 5093 0000 		nop
 126 004a 4093 0000 		nop
 127               	/* #NOAPP */
 128 004e 0895      		subi r20,lo8(-(1))
 129               		sbci r21,hi8(-(1))
 131               	.LM5:
 132               		ldi r22,hi8(801)
 133               		cpi r20,lo8(801)
 134               		cpc r21,r22
 135               		brne .L3
 136               		subi r18,lo8(-(1))
 137               		sbci r19,hi8(-(1))
  34:delay.h       **** 		}
  35:delay.h       **** 	}
  36:delay.h       **** }
  37:delay.h       **** 
  38:delay.h       **** void delayus(unsigned int delaytime)
  39:delay.h       **** {
 138               	-delayms
 139               	.LM5:
 140               		ldi r22,hi8(801)
 141               		cpi r20,lo8(801)
  40:delay.h       **** 	for(delaycounter1=0;delaycounter1<=delaytime;delaycounter1++)
 142               	APP */
 143               		subi r20,lo8(-(1))
 144 0050 1092 0000 		sbci r21,hi8(-(1))
 146 0058 20E0      	.LM5:
 147 005a 30E0      		ldi r22,hi8(801)
 148               		cpi r20,lo8(801)
  41:delay.h       **** 	{
  42:delay.h       **** 		asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
 149               	APP */
 150               		subi r20,lo8(-(1))
 151               		sbci r21,hi8(-(1))
 153 005e 0000      	.LM5:
 154 0060 0000      		ldi r22,hi8(801)
 155 0062 0000      		cpi r20,lo8(801)
 156 0064 0000      		cpc r21,r22
 157 0066 0000      		brne .L3
  43:delay.h       **** 		asm("nop");asm("nop");asm("nop");asm("nop");
 158               	)
 159               		sbci r21,hi8(-(1))
 161 006a 0000      	.LM5:
 162 006c 0000      		ldi r22,hi8(801)
 163 006e 0000      		cpi r20,lo8(801)
 164               		cpc r21,r22
 165 0070 2F5F      		brne .L3
 166 0072 3F4F      		subi r18,lo8(-(1))
 167               		sbci r19,hi8(-(1))
 169 0074 8217      	.LM6:
 170 0076 9307      		cp r24,r18
 171 0078 00F4      		cpc r25,r19
 172 007a 3093 0000 		brsh .L2
 173 007e 2093 0000 		sts (delaycounter1)+1,r19
 174               		sts delaycounter1,r18
 175 0082 0895      		sts (delaycounter2)+1,r21
 176               		sts delaycounter2,r20
 177               	/* epilogue: frame size=0 */
 178               		ret
 179               	/* epilogue end (size=1) */
 180               	/* function delayms size 52 (51) */
 182               	.Lscope0:
 185               	.global	delayus
   1:main.c        **** /***********************************************************************
   2:main.c        **** 
   3:main.c        **** CODE4.3: Program for Sensor test
   4:main.c        **** 
   5:main.c        **** ***********************************************************************
   6:main.c        **** COPYRIGHT(C)Technophilia Systems
   7:main.c        **** Date:...............1st May 2011
   8:main.c        **** Author:.............Prasanta Kumar Nayak
   9:main.c        **** Organization:.......Technophilia Syestems
  10:main.c        **** Target system:......AVR devlopment board s/n-107010
  11:main.c        **** Manufacturer:.......Technophilia Syestems
  12:main.c        **** Microcontroller:....ATmega-8535
  13:main.c        **** Clock:..............16mhz
  14:main.c        **** 
  15:main.c        **** ***********************************************************************/
  16:main.c        **** 
  17:main.c        **** #include<avr/io.h>		//This is the header for AVR Microcontroller.
  18:main.c        **** #include"delay.h"       //This is the working header file for delay.
  19:main.c        **** 
  20:main.c        **** void main()
  21:main.c        **** {
 186               	:
 189               	.global	delayus
  22:main.c        **** 	PORTC=0X00;			// PortC initiallization as all bits low.
 190               	:
  23:main.c        **** 	DDRC=0X08;			// PortC data direction declaration as out put.
 193               	-delayms
 194               	.Lscope0:
  24:main.c        **** 	
  25:main.c        **** 	PORTA=0XFF;			// PortA initiallization as all bits high.
 197               	-delayms
 198               	.Lscope0:
  26:main.c        **** 	DDRA=0X00;			// PortA data direction declaration as input.
 201               	-delayms
 202               	.Lscope0:
 205               	.global	delayus
  27:main.c        **** 	
  28:main.c        **** 	while(1)			//This is for the the infinity loop.
  29:main.c        **** 	{	
  30:main.c        **** 		if((PINA&0x01)==0x00)	// Sensor at PA0 is sensing Obstacle
 206               	:
 209 0094 00C0      	.global	delayus
  31:main.c        **** 		 {
  32:main.c        ****  		  PORTC=0x08;			// Buzzer ON
 210               	:
 213 0098 00C0      	.global	delayus
  33:main.c        **** 		 }
  34:main.c        **** 		else
  35:main.c        **** 		 {
  36:main.c        **** 		  PORTC=0X00;			// Buzzer OFF
 215               	,36,0,0,delayus
 217 009a 15BA      	.global	delayus
 219               	delayus:
 221               	.LM7:
 222               	/* prologue: frame size=0 */
 223               	/* prologue end (size=0) */
 225               	.LM8:
 226               		sts (delaycounter1)+1,__zero_reg__
 227               		sts delaycounter1,__zero_reg__
 228               		ldi r18,lo8(0)
 229               		ldi r19,hi8(0)
 230               	.L12:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp/ccWKOXzD.s:3      *ABS*:0000003f __SREG__
C:\Users\User\AppData\Local\Temp/ccWKOXzD.s:4      *ABS*:0000003e __SP_H__
C:\Users\User\AppData\Local\Temp/ccWKOXzD.s:5      *ABS*:0000003d __SP_L__
C:\Users\User\AppData\Local\Temp/ccWKOXzD.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\User\AppData\Local\Temp/ccWKOXzD.s:7      *ABS*:00000001 __zero_reg__
C:\Users\User\AppData\Local\Temp/ccWKOXzD.s:71     .text:00000000 delayms
                            *COM*:00000002 delaycounter1
                            *COM*:00000002 delaycounter2
C:\Users\User\AppData\Local\Temp/ccWKOXzD.s:137    .text:00000050 delayus
C:\Users\User\AppData\Local\Temp/ccWKOXzD.s:183    .text:00000084 main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
