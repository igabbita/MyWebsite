
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000192  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000000c  00800060  00800060  00000206  2**0
                  ALLOC
  2 .stab         00000894  00000000  00000000  00000208  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000711  00000000  00000000  00000a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
   2:	2e c0       	rjmp	.+92     	; 0x60 <__bad_interrupt>
   4:	2d c0       	rjmp	.+90     	; 0x60 <__bad_interrupt>
   6:	2c c0       	rjmp	.+88     	; 0x60 <__bad_interrupt>
   8:	2b c0       	rjmp	.+86     	; 0x60 <__bad_interrupt>
   a:	2a c0       	rjmp	.+84     	; 0x60 <__bad_interrupt>
   c:	29 c0       	rjmp	.+82     	; 0x60 <__bad_interrupt>
   e:	28 c0       	rjmp	.+80     	; 0x60 <__bad_interrupt>
  10:	27 c0       	rjmp	.+78     	; 0x60 <__bad_interrupt>
  12:	26 c0       	rjmp	.+76     	; 0x60 <__bad_interrupt>
  14:	25 c0       	rjmp	.+74     	; 0x60 <__bad_interrupt>
  16:	24 c0       	rjmp	.+72     	; 0x60 <__bad_interrupt>
  18:	23 c0       	rjmp	.+70     	; 0x60 <__bad_interrupt>
  1a:	22 c0       	rjmp	.+68     	; 0x60 <__bad_interrupt>
  1c:	21 c0       	rjmp	.+66     	; 0x60 <__bad_interrupt>
  1e:	20 c0       	rjmp	.+64     	; 0x60 <__bad_interrupt>
  20:	1f c0       	rjmp	.+62     	; 0x60 <__bad_interrupt>
  22:	1e c0       	rjmp	.+60     	; 0x60 <__bad_interrupt>
  24:	1d c0       	rjmp	.+58     	; 0x60 <__bad_interrupt>
  26:	1c c0       	rjmp	.+56     	; 0x60 <__bad_interrupt>
  28:	1b c0       	rjmp	.+54     	; 0x60 <__bad_interrupt>

0000002a <__ctors_end>:
  2a:	11 24       	eor	r1, r1
  2c:	1f be       	out	0x3f, r1	; 63
  2e:	cf e5       	ldi	r28, 0x5F	; 95
  30:	d2 e0       	ldi	r29, 0x02	; 2
  32:	de bf       	out	0x3e, r29	; 62
  34:	cd bf       	out	0x3d, r28	; 61

00000036 <__do_copy_data>:
  36:	10 e0       	ldi	r17, 0x00	; 0
  38:	a0 e6       	ldi	r26, 0x60	; 96
  3a:	b0 e0       	ldi	r27, 0x00	; 0
  3c:	e2 e9       	ldi	r30, 0x92	; 146
  3e:	f1 e0       	ldi	r31, 0x01	; 1
  40:	02 c0       	rjmp	.+4      	; 0x46 <.do_copy_data_start>

00000042 <.do_copy_data_loop>:
  42:	05 90       	lpm	r0, Z+
  44:	0d 92       	st	X+, r0

00000046 <.do_copy_data_start>:
  46:	a0 36       	cpi	r26, 0x60	; 96
  48:	b1 07       	cpc	r27, r17
  4a:	d9 f7       	brne	.-10     	; 0x42 <.do_copy_data_loop>

0000004c <__do_clear_bss>:
  4c:	10 e0       	ldi	r17, 0x00	; 0
  4e:	a0 e6       	ldi	r26, 0x60	; 96
  50:	b0 e0       	ldi	r27, 0x00	; 0
  52:	01 c0       	rjmp	.+2      	; 0x56 <.do_clear_bss_start>

00000054 <.do_clear_bss_loop>:
  54:	1d 92       	st	X+, r1

00000056 <.do_clear_bss_start>:
  56:	ac 36       	cpi	r26, 0x6C	; 108
  58:	b1 07       	cpc	r27, r17
  5a:	e1 f7       	brne	.-8      	; 0x54 <.do_clear_bss_loop>
  5c:	7d d0       	rcall	.+250    	; 0x158 <main>
  5e:	98 c0       	rjmp	.+304    	; 0x190 <_exit>

00000060 <__bad_interrupt>:
  60:	cf cf       	rjmp	.-98     	; 0x0 <__heap_end>

00000062 <delayms>:
unsigned int delaycounter1,delaycounter2;
void delayms(unsigned int delaytime)
{

	 for(delaycounter1=0;delaycounter1<=delaytime;delaycounter1++)
  62:	10 92 6b 00 	sts	0x006B, r1
  66:	10 92 6a 00 	sts	0x006A, r1
  6a:	20 e0       	ldi	r18, 0x00	; 0
  6c:	30 e0       	ldi	r19, 0x00	; 0
  6e:	40 e0       	ldi	r20, 0x00	; 0
  70:	50 e0       	ldi	r21, 0x00	; 0
	...
	 {
		 for(delaycounter2=0;delaycounter2<=800;delaycounter2++)
		  {
		  asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
		  asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
  8a:	4f 5f       	subi	r20, 0xFF	; 255
  8c:	5f 4f       	sbci	r21, 0xFF	; 255
  8e:	63 e0       	ldi	r22, 0x03	; 3
  90:	41 32       	cpi	r20, 0x21	; 33
  92:	56 07       	cpc	r21, r22
  94:	71 f7       	brne	.-36     	; 0x72 <delayms+0x10>
  96:	2f 5f       	subi	r18, 0xFF	; 255
  98:	3f 4f       	sbci	r19, 0xFF	; 255
  9a:	82 17       	cp	r24, r18
  9c:	93 07       	cpc	r25, r19
  9e:	38 f7       	brcc	.-50     	; 0x6e <delayms+0xc>
  a0:	30 93 6b 00 	sts	0x006B, r19
  a4:	20 93 6a 00 	sts	0x006A, r18
  a8:	50 93 68 00 	sts	0x0068, r21
  ac:	40 93 67 00 	sts	0x0067, r20
  b0:	08 95       	ret

000000b2 <delayus>:
		  }
		
	 }
}

void delayus(unsigned int delaytime)
{

	 for(delaycounter1=0;delaycounter1<=delaytime;delaycounter1++)
  b2:	10 92 6b 00 	sts	0x006B, r1
  b6:	10 92 6a 00 	sts	0x006A, r1
  ba:	20 e0       	ldi	r18, 0x00	; 0
  bc:	30 e0       	ldi	r19, 0x00	; 0
	...
	 {
		 
		  asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
		  asm("nop");asm("nop");asm("nop");asm("nop");
  d2:	2f 5f       	subi	r18, 0xFF	; 255
  d4:	3f 4f       	sbci	r19, 0xFF	; 255
  d6:	82 17       	cp	r24, r18
  d8:	93 07       	cpc	r25, r19
  da:	88 f7       	brcc	.-30     	; 0xbe <delayus+0xc>
  dc:	30 93 6b 00 	sts	0x006B, r19
  e0:	20 93 6a 00 	sts	0x006A, r18
  e4:	08 95       	ret

000000e6 <charactor>:


void charactor()
  {
   PORTA=dar[0]|0x00;
  e6:	80 91 60 00 	lds	r24, 0x0060
  ea:	8b bb       	out	0x1b, r24	; 27
   delayms(d);
  ec:	80 91 69 00 	lds	r24, 0x0069
  f0:	99 27       	eor	r25, r25
  f2:	b7 df       	rcall	.-146    	; 0x62 <delayms>
   PORTA=dar[1]|0x01;
  f4:	80 91 61 00 	lds	r24, 0x0061
  f8:	81 60       	ori	r24, 0x01	; 1
  fa:	8b bb       	out	0x1b, r24	; 27
   delayms(d);
  fc:	80 91 69 00 	lds	r24, 0x0069
 100:	99 27       	eor	r25, r25
 102:	af df       	rcall	.-162    	; 0x62 <delayms>
   PORTA=dar[2]|0x02;
 104:	80 91 62 00 	lds	r24, 0x0062
 108:	82 60       	ori	r24, 0x02	; 2
 10a:	8b bb       	out	0x1b, r24	; 27
   delayms(d);
 10c:	80 91 69 00 	lds	r24, 0x0069
 110:	99 27       	eor	r25, r25
 112:	a7 df       	rcall	.-178    	; 0x62 <delayms>
   PORTA=dar[3]|0x03;
 114:	80 91 63 00 	lds	r24, 0x0063
 118:	83 60       	ori	r24, 0x03	; 3
 11a:	8b bb       	out	0x1b, r24	; 27
   delayms(d);
 11c:	80 91 69 00 	lds	r24, 0x0069
 120:	99 27       	eor	r25, r25
 122:	9f df       	rcall	.-194    	; 0x62 <delayms>
   PORTA=dar[4]|0x04;
 124:	80 91 64 00 	lds	r24, 0x0064
 128:	84 60       	ori	r24, 0x04	; 4
 12a:	8b bb       	out	0x1b, r24	; 27
   delayms(d);
 12c:	80 91 69 00 	lds	r24, 0x0069
 130:	99 27       	eor	r25, r25
 132:	97 df       	rcall	.-210    	; 0x62 <delayms>
   PORTA=dar[5]|0x05;
 134:	80 91 65 00 	lds	r24, 0x0065
 138:	85 60       	ori	r24, 0x05	; 5
 13a:	8b bb       	out	0x1b, r24	; 27
   delayms(d);
 13c:	80 91 69 00 	lds	r24, 0x0069
 140:	99 27       	eor	r25, r25
 142:	8f df       	rcall	.-226    	; 0x62 <delayms>
   PORTA=dar[6]|0x06;
 144:	80 91 66 00 	lds	r24, 0x0066
 148:	86 60       	ori	r24, 0x06	; 6
 14a:	8b bb       	out	0x1b, r24	; 27
   delayms(d);
 14c:	80 91 69 00 	lds	r24, 0x0069
 150:	99 27       	eor	r25, r25
 152:	87 df       	rcall	.-242    	; 0x62 <delayms>
 154:	08 95       	ret

00000156 <set>:
  }
 void set()
  {
 156:	08 95       	ret

00000158 <main>:
   
  }
 
 
int main()
{
 DDRA=0xff;
 158:	8f ef       	ldi	r24, 0xFF	; 255
 15a:	8a bb       	out	0x1a, r24	; 26
 PORTA=0x00;
 15c:	1b ba       	out	0x1b, r1	; 27
 d=1;
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	80 93 69 00 	sts	0x0069, r24
  dar[0]=0x00;
 164:	10 92 60 00 	sts	0x0060, r1
  dar[1]=0x10;
 168:	80 e1       	ldi	r24, 0x10	; 16
 16a:	80 93 61 00 	sts	0x0061, r24
  dar[2]=0x20;
 16e:	80 e2       	ldi	r24, 0x20	; 32
 170:	80 93 62 00 	sts	0x0062, r24
  dar[3]=0x30;
 174:	80 e3       	ldi	r24, 0x30	; 48
 176:	80 93 63 00 	sts	0x0063, r24
  dar[4]=0x40;
 17a:	80 e4       	ldi	r24, 0x40	; 64
 17c:	80 93 64 00 	sts	0x0064, r24
  dar[5]=0x50;
 180:	80 e5       	ldi	r24, 0x50	; 80
 182:	80 93 65 00 	sts	0x0065, r24
  dar[6]=0x60;
 186:	80 e6       	ldi	r24, 0x60	; 96
 188:	80 93 66 00 	sts	0x0066, r24
  
  
 
 while(1)
  {
   
   charactor(); 
 18c:	ac df       	rcall	.-168    	; 0xe6 <charactor>
 18e:	fe cf       	rjmp	.-4      	; 0x18c <main+0x34>

00000190 <_exit>:
 190:	ff cf       	rjmp	.-2      	; 0x190 <_exit>
