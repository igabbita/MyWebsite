
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000033e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000720  00000000  00000000  00000394  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000677  00000000  00000000  00000ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
   2:	2e c0       	rjmp	.+92     	; 0x60 <__bad_interrupt>
   4:	2d c0       	rjmp	.+90     	; 0x60 <__bad_interrupt>
   6:	2c c0       	rjmp	.+88     	; 0x60 <__bad_interrupt>
   8:	2b c0       	rjmp	.+86     	; 0x60 <__bad_interrupt>
   a:	2a c0       	rjmp	.+84     	; 0x60 <__bad_interrupt>
   c:	29 c0       	rjmp	.+82     	; 0x60 <__bad_interrupt>
   e:	28 c0       	rjmp	.+80     	; 0x60 <__bad_interrupt>
  10:	27 c0       	rjmp	.+78     	; 0x60 <__bad_interrupt>
  12:	26 c0       	rjmp	.+76     	; 0x60 <__bad_interrupt>
  14:	25 c0       	rjmp	.+74     	; 0x60 <__bad_interrupt>
  16:	24 c0       	rjmp	.+72     	; 0x60 <__bad_interrupt>
  18:	23 c0       	rjmp	.+70     	; 0x60 <__bad_interrupt>
  1a:	22 c0       	rjmp	.+68     	; 0x60 <__bad_interrupt>
  1c:	21 c0       	rjmp	.+66     	; 0x60 <__bad_interrupt>
  1e:	20 c0       	rjmp	.+64     	; 0x60 <__bad_interrupt>
  20:	1f c0       	rjmp	.+62     	; 0x60 <__bad_interrupt>
  22:	1e c0       	rjmp	.+60     	; 0x60 <__bad_interrupt>
  24:	1d c0       	rjmp	.+58     	; 0x60 <__bad_interrupt>
  26:	1c c0       	rjmp	.+56     	; 0x60 <__bad_interrupt>
  28:	1b c0       	rjmp	.+54     	; 0x60 <__bad_interrupt>

0000002a <__ctors_end>:
  2a:	11 24       	eor	r1, r1
  2c:	1f be       	out	0x3f, r1	; 63
  2e:	cf e5       	ldi	r28, 0x5F	; 95
  30:	d2 e0       	ldi	r29, 0x02	; 2
  32:	de bf       	out	0x3e, r29	; 62
  34:	cd bf       	out	0x3d, r28	; 61

00000036 <__do_copy_data>:
  36:	10 e0       	ldi	r17, 0x00	; 0
  38:	a0 e6       	ldi	r26, 0x60	; 96
  3a:	b0 e0       	ldi	r27, 0x00	; 0
  3c:	ee e3       	ldi	r30, 0x3E	; 62
  3e:	f3 e0       	ldi	r31, 0x03	; 3
  40:	02 c0       	rjmp	.+4      	; 0x46 <.do_copy_data_start>

00000042 <.do_copy_data_loop>:
  42:	05 90       	lpm	r0, Z+
  44:	0d 92       	st	X+, r0

00000046 <.do_copy_data_start>:
  46:	a0 36       	cpi	r26, 0x60	; 96
  48:	b1 07       	cpc	r27, r17
  4a:	d9 f7       	brne	.-10     	; 0x42 <.do_copy_data_loop>

0000004c <__do_clear_bss>:
  4c:	10 e0       	ldi	r17, 0x00	; 0
  4e:	a0 e6       	ldi	r26, 0x60	; 96
  50:	b0 e0       	ldi	r27, 0x00	; 0
  52:	01 c0       	rjmp	.+2      	; 0x56 <.do_clear_bss_start>

00000054 <.do_clear_bss_loop>:
  54:	1d 92       	st	X+, r1

00000056 <.do_clear_bss_start>:
  56:	a0 36       	cpi	r26, 0x60	; 96
  58:	b1 07       	cpc	r27, r17
  5a:	e1 f7       	brne	.-8      	; 0x54 <.do_clear_bss_loop>
  5c:	35 d0       	rcall	.+106    	; 0xc8 <main>
  5e:	6e c1       	rjmp	.+732    	; 0x33c <_exit>

00000060 <__bad_interrupt>:
  60:	cf cf       	rjmp	.-98     	; 0x0 <__vectors>

00000062 <delay>:

#include<avr/io.h>		//This is the header for AVR Microcontroller.

void delay(double x)
{
  62:	af 92       	push	r10
  64:	bf 92       	push	r11
  66:	cf 92       	push	r12
  68:	df 92       	push	r13
  6a:	ef 92       	push	r14
  6c:	ff 92       	push	r15
  6e:	0f 93       	push	r16
  70:	1f 93       	push	r17
double i;
for(i=0;i<=x*100;i++);
  72:	20 e0       	ldi	r18, 0x00	; 0
  74:	30 e0       	ldi	r19, 0x00	; 0
  76:	48 ec       	ldi	r20, 0xC8	; 200
  78:	52 e4       	ldi	r21, 0x42	; 66
  7a:	15 d1       	rcall	.+554    	; 0x2a6 <__mulsf3>
  7c:	5b 01       	movw	r10, r22
  7e:	6c 01       	movw	r12, r24
  80:	0f 2e       	mov	r0, r31
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	ef 2e       	mov	r14, r31
  86:	f0 e0       	ldi	r31, 0x00	; 0
  88:	ff 2e       	mov	r15, r31
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	0f 2f       	mov	r16, r31
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	1f 2f       	mov	r17, r31
  92:	f0 2d       	mov	r31, r0
  94:	09 c0       	rjmp	.+18     	; 0xa8 <delay+0x46>
  96:	20 e0       	ldi	r18, 0x00	; 0
  98:	30 e0       	ldi	r19, 0x00	; 0
  9a:	40 e8       	ldi	r20, 0x80	; 128
  9c:	5f e3       	ldi	r21, 0x3F	; 63
  9e:	c8 01       	movw	r24, r16
  a0:	b7 01       	movw	r22, r14
  a2:	52 d0       	rcall	.+164    	; 0x148 <__addsf3>
  a4:	7b 01       	movw	r14, r22
  a6:	8c 01       	movw	r16, r24
  a8:	a6 01       	movw	r20, r12
  aa:	95 01       	movw	r18, r10
  ac:	c8 01       	movw	r24, r16
  ae:	b7 01       	movw	r22, r14
  b0:	8d d0       	rcall	.+282    	; 0x1cc <__eqsf2>
  b2:	18 16       	cp	r1, r24
  b4:	84 f7       	brge	.-32     	; 0x96 <delay+0x34>
  b6:	1f 91       	pop	r17
  b8:	0f 91       	pop	r16
  ba:	ff 90       	pop	r15
  bc:	ef 90       	pop	r14
  be:	df 90       	pop	r13
  c0:	cf 90       	pop	r12
  c2:	bf 90       	pop	r11
  c4:	af 90       	pop	r10
  c6:	08 95       	ret

000000c8 <main>:
}

int main(void)
{
  c8:	ef 92       	push	r14
  ca:	ff 92       	push	r15
  cc:	0f 93       	push	r16
  ce:	1f 93       	push	r17
	PORTC=0X00;			//PortC initiallization as all bits low.
  d0:	15 ba       	out	0x15, r1	; 21
	DDRC=0XF0;			//PortC data direction declaration as out put.
  d2:	80 ef       	ldi	r24, 0xF0	; 240
  d4:	84 bb       	out	0x14, r24	; 20
	
	while(1)			//This is for the the infinity loop.
	{	
		PORTC=0xF0;		//Turning ON all LED
  d6:	80 ef       	ldi	r24, 0xF0	; 240
  d8:	85 bb       	out	0x15, r24	; 21
  da:	0f 2e       	mov	r0, r31
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	ef 2e       	mov	r14, r31
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	ff 2e       	mov	r15, r31
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	0f 2f       	mov	r16, r31
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	1f 2f       	mov	r17, r31
  ec:	f0 2d       	mov	r31, r0
  ee:	20 e0       	ldi	r18, 0x00	; 0
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	40 e8       	ldi	r20, 0x80	; 128
  f4:	5f e3       	ldi	r21, 0x3F	; 63
  f6:	c8 01       	movw	r24, r16
  f8:	b7 01       	movw	r22, r14
  fa:	26 d0       	rcall	.+76     	; 0x148 <__addsf3>
  fc:	7b 01       	movw	r14, r22
  fe:	8c 01       	movw	r16, r24
 100:	20 e0       	ldi	r18, 0x00	; 0
 102:	30 e4       	ldi	r19, 0x40	; 64
 104:	4c e1       	ldi	r20, 0x1C	; 28
 106:	56 e4       	ldi	r21, 0x46	; 70
 108:	61 d0       	rcall	.+194    	; 0x1cc <__eqsf2>
 10a:	18 16       	cp	r1, r24
 10c:	84 f7       	brge	.-32     	; 0xee <main+0x26>
		delay(100);
		PORTC=0x00;		//Turning OFF all LED
 10e:	15 ba       	out	0x15, r1	; 21
 110:	0f 2e       	mov	r0, r31
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	ef 2e       	mov	r14, r31
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	ff 2e       	mov	r15, r31
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	0f 2f       	mov	r16, r31
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	1f 2f       	mov	r17, r31
 122:	f0 2d       	mov	r31, r0
 124:	20 e0       	ldi	r18, 0x00	; 0
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	40 e8       	ldi	r20, 0x80	; 128
 12a:	5f e3       	ldi	r21, 0x3F	; 63
 12c:	c8 01       	movw	r24, r16
 12e:	b7 01       	movw	r22, r14
 130:	0b d0       	rcall	.+22     	; 0x148 <__addsf3>
 132:	7b 01       	movw	r14, r22
 134:	8c 01       	movw	r16, r24
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e4       	ldi	r19, 0x40	; 64
 13a:	4c e1       	ldi	r20, 0x1C	; 28
 13c:	56 e4       	ldi	r21, 0x46	; 70
 13e:	46 d0       	rcall	.+140    	; 0x1cc <__eqsf2>
 140:	18 16       	cp	r1, r24
 142:	84 f7       	brge	.-32     	; 0x124 <main+0x5c>
 144:	c8 cf       	rjmp	.-112    	; 0xd6 <main+0xe>

00000146 <__subsf3>:
 146:	50 58       	subi	r21, 0x80	; 128

00000148 <__addsf3>:
 148:	19 2e       	mov	r1, r25
 14a:	7f d0       	rcall	.+254    	; 0x24a <__fp_split3>
 14c:	01 d0       	rcall	.+2      	; 0x150 <__addsf3x>
 14e:	65 c0       	rjmp	.+202    	; 0x21a <__fp_merge>

00000150 <__addsf3x>:
 150:	ba 17       	cp	r27, r26
 152:	62 07       	cpc	r22, r18
 154:	73 07       	cpc	r23, r19
 156:	84 07       	cpc	r24, r20
 158:	95 07       	cpc	r25, r21
 15a:	b1 f1       	breq	.+108    	; 0x1c8 <__addsf3x+0x78>
 15c:	88 f4       	brcc	.+34     	; 0x180 <__addsf3x+0x30>
 15e:	0e f4       	brtc	.+2      	; 0x162 <__addsf3x+0x12>
 160:	10 94       	com	r1
 162:	0b 2e       	mov	r0, r27
 164:	ba 2f       	mov	r27, r26
 166:	a0 2d       	mov	r26, r0
 168:	06 2e       	mov	r0, r22
 16a:	62 2f       	mov	r22, r18
 16c:	20 2d       	mov	r18, r0
 16e:	07 2e       	mov	r0, r23
 170:	73 2f       	mov	r23, r19
 172:	30 2d       	mov	r19, r0
 174:	08 2e       	mov	r0, r24
 176:	84 2f       	mov	r24, r20
 178:	40 2d       	mov	r20, r0
 17a:	09 2e       	mov	r0, r25
 17c:	95 2f       	mov	r25, r21
 17e:	50 2d       	mov	r21, r0
 180:	ff 27       	eor	r31, r31
 182:	55 23       	and	r21, r21
 184:	b9 f0       	breq	.+46     	; 0x1b4 <__addsf3x+0x64>
 186:	59 1b       	sub	r21, r25
 188:	49 f0       	breq	.+18     	; 0x19c <__addsf3x+0x4c>
 18a:	57 3e       	cpi	r21, 0xE7	; 231
 18c:	98 f0       	brcs	.+38     	; 0x1b4 <__addsf3x+0x64>
 18e:	46 95       	lsr	r20
 190:	37 95       	ror	r19
 192:	27 95       	ror	r18
 194:	a7 95       	ror	r26
 196:	f0 40       	sbci	r31, 0x00	; 0
 198:	53 95       	inc	r21
 19a:	c9 f7       	brne	.-14     	; 0x18e <__addsf3x+0x3e>
 19c:	76 f0       	brts	.+28     	; 0x1ba <__addsf3x+0x6a>
 19e:	ba 0f       	add	r27, r26
 1a0:	62 1f       	adc	r22, r18
 1a2:	73 1f       	adc	r23, r19
 1a4:	84 1f       	adc	r24, r20
 1a6:	30 f4       	brcc	.+12     	; 0x1b4 <__addsf3x+0x64>
 1a8:	87 95       	ror	r24
 1aa:	77 95       	ror	r23
 1ac:	67 95       	ror	r22
 1ae:	b7 95       	ror	r27
 1b0:	f0 40       	sbci	r31, 0x00	; 0
 1b2:	93 95       	inc	r25
 1b4:	17 fa       	bst	r1, 7
 1b6:	0f 2e       	mov	r0, r31
 1b8:	08 95       	ret
 1ba:	bf 1b       	sub	r27, r31
 1bc:	bb 27       	eor	r27, r27
 1be:	ba 0b       	sbc	r27, r26
 1c0:	62 0b       	sbc	r22, r18
 1c2:	73 0b       	sbc	r23, r19
 1c4:	84 0b       	sbc	r24, r20
 1c6:	f6 cf       	rjmp	.-20     	; 0x1b4 <__addsf3x+0x64>
 1c8:	de f6       	brtc	.-74     	; 0x180 <__addsf3x+0x30>
 1ca:	6b c0       	rjmp	.+214    	; 0x2a2 <__fp_zerox>

000001cc <__eqsf2>:
 1cc:	0e d0       	rcall	.+28     	; 0x1ea <.fp_cmp>
 1ce:	5e f0       	brts	.+22     	; 0x1e6 <__cmpsf2+0xe>
 1d0:	04 c0       	rjmp	.+8      	; 0x1da <__cmpsf2+0x2>

000001d2 <__gesf2>:
 1d2:	0b d0       	rcall	.+22     	; 0x1ea <.fp_cmp>
 1d4:	26 f0       	brts	.+8      	; 0x1de <__cmpsf2+0x6>
 1d6:	01 c0       	rjmp	.+2      	; 0x1da <__cmpsf2+0x2>

000001d8 <__cmpsf2>:
 1d8:	08 d0       	rcall	.+16     	; 0x1ea <.fp_cmp>
 1da:	19 f0       	breq	.+6      	; 0x1e2 <__cmpsf2+0xa>
 1dc:	20 f4       	brcc	.+8      	; 0x1e6 <__cmpsf2+0xe>
 1de:	8f ef       	ldi	r24, 0xFF	; 255
 1e0:	08 95       	ret
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	08 95       	ret
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	08 95       	ret

000001ea <.fp_cmp>:
 1ea:	97 fb       	bst	r25, 7
 1ec:	09 2e       	mov	r0, r25
 1ee:	05 26       	eor	r0, r21
 1f0:	00 f8       	bld	r0, 0
 1f2:	68 94       	set
 1f4:	2d d0       	rcall	.+90     	; 0x250 <__fp_split2>
 1f6:	e8 94       	clt
 1f8:	07 fc       	sbrc	r0, 7
 1fa:	07 c0       	rjmp	.+14     	; 0x20a <.fp_cmp+0x20>
 1fc:	62 17       	cp	r22, r18
 1fe:	73 07       	cpc	r23, r19
 200:	84 07       	cpc	r24, r20
 202:	95 07       	cpc	r25, r21
 204:	21 f0       	breq	.+8      	; 0x20e <.fp_cmp+0x24>
 206:	08 f4       	brcc	.+2      	; 0x20a <.fp_cmp+0x20>
 208:	00 94       	com	r0
 20a:	07 94       	ror	r0
 20c:	98 94       	clz
 20e:	08 95       	ret
 210:	9a 95       	dec	r25
 212:	bb 0f       	add	r27, r27
 214:	66 1f       	adc	r22, r22
 216:	77 1f       	adc	r23, r23
 218:	88 1f       	adc	r24, r24

0000021a <__fp_merge>:
 21a:	11 24       	eor	r1, r1
 21c:	99 23       	and	r25, r25
 21e:	a1 f0       	breq	.+40     	; 0x248 <__fp_merge+0x2e>
 220:	88 23       	and	r24, r24
 222:	b2 f7       	brpl	.-20     	; 0x210 <.fp_cmp+0x26>
 224:	9f 3f       	cpi	r25, 0xFF	; 255
 226:	59 f0       	breq	.+22     	; 0x23e <__fp_merge+0x24>
 228:	bb 0f       	add	r27, r27
 22a:	48 f4       	brcc	.+18     	; 0x23e <__fp_merge+0x24>
 22c:	21 f4       	brne	.+8      	; 0x236 <__fp_merge+0x1c>
 22e:	00 20       	and	r0, r0
 230:	11 f4       	brne	.+4      	; 0x236 <__fp_merge+0x1c>
 232:	60 ff       	sbrs	r22, 0
 234:	04 c0       	rjmp	.+8      	; 0x23e <__fp_merge+0x24>
 236:	6f 5f       	subi	r22, 0xFF	; 255
 238:	7f 4f       	sbci	r23, 0xFF	; 255
 23a:	8f 4f       	sbci	r24, 0xFF	; 255
 23c:	9f 4f       	sbci	r25, 0xFF	; 255
 23e:	88 1f       	adc	r24, r24
 240:	97 95       	ror	r25
 242:	87 95       	ror	r24
 244:	97 f9       	bld	r25, 7
 246:	08 95       	ret
 248:	29 c0       	rjmp	.+82     	; 0x29c <__fp_zero>

0000024a <__fp_split3>:
 24a:	05 2e       	mov	r0, r21
 24c:	09 26       	eor	r0, r25
 24e:	07 fa       	bst	r0, 7

00000250 <__fp_split2>:
 250:	44 0f       	add	r20, r20
 252:	55 1f       	adc	r21, r21
 254:	5f 3f       	cpi	r21, 0xFF	; 255
 256:	79 f0       	breq	.+30     	; 0x276 <__fp_split1+0x14>
 258:	aa 27       	eor	r26, r26
 25a:	a5 17       	cp	r26, r21
 25c:	08 f0       	brcs	.+2      	; 0x260 <__stack+0x1>
 25e:	51 e0       	ldi	r21, 0x01	; 1
 260:	47 95       	ror	r20

00000262 <__fp_split1>:
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	9f 3f       	cpi	r25, 0xFF	; 255
 268:	31 f0       	breq	.+12     	; 0x276 <__fp_split1+0x14>
 26a:	bb 27       	eor	r27, r27
 26c:	b9 17       	cp	r27, r25
 26e:	08 f0       	brcs	.+2      	; 0x272 <__fp_split1+0x10>
 270:	91 e0       	ldi	r25, 0x01	; 1
 272:	87 95       	ror	r24
 274:	08 95       	ret
 276:	9f 91       	pop	r25
 278:	9f 91       	pop	r25
 27a:	11 24       	eor	r1, r1
 27c:	5c c0       	rjmp	.+184    	; 0x336 <__fp_nan>

0000027e <__fp_split_a>:
 27e:	97 fb       	bst	r25, 7
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	9f 3f       	cpi	r25, 0xFF	; 255
 286:	31 f0       	breq	.+12     	; 0x294 <__fp_split_a+0x16>
 288:	bb 27       	eor	r27, r27
 28a:	b9 17       	cp	r27, r25
 28c:	08 f0       	brcs	.+2      	; 0x290 <__fp_split_a+0x12>
 28e:	91 e0       	ldi	r25, 0x01	; 1
 290:	87 95       	ror	r24
 292:	08 95       	ret
 294:	9f 91       	pop	r25
 296:	9f 91       	pop	r25
 298:	11 24       	eor	r1, r1
 29a:	4d c0       	rjmp	.+154    	; 0x336 <__fp_nan>

0000029c <__fp_zero>:
 29c:	66 27       	eor	r22, r22
 29e:	77 27       	eor	r23, r23
 2a0:	88 27       	eor	r24, r24

000002a2 <__fp_zerox>:
 2a2:	99 27       	eor	r25, r25
 2a4:	08 95       	ret

000002a6 <__mulsf3>:
 2a6:	d1 df       	rcall	.-94     	; 0x24a <__fp_split3>
 2a8:	01 d0       	rcall	.+2      	; 0x2ac <__mulsf3x>
 2aa:	b7 cf       	rjmp	.-146    	; 0x21a <__fp_merge>

000002ac <__mulsf3x>:
 2ac:	99 23       	and	r25, r25
 2ae:	39 f0       	breq	.+14     	; 0x2be <__mulsf3x+0x12>
 2b0:	55 23       	and	r21, r21
 2b2:	29 f0       	breq	.+10     	; 0x2be <__mulsf3x+0x12>
 2b4:	9f 57       	subi	r25, 0x7F	; 127
 2b6:	5f 57       	subi	r21, 0x7F	; 127
 2b8:	95 0f       	add	r25, r21
 2ba:	13 f4       	brvc	.+4      	; 0x2c0 <__mulsf3x+0x14>
 2bc:	9a f1       	brmi	.+102    	; 0x324 <__mulsf3x+0x78>
 2be:	f1 cf       	rjmp	.-30     	; 0x2a2 <__fp_zerox>
 2c0:	91 58       	subi	r25, 0x81	; 129
 2c2:	9f 3f       	cpi	r25, 0xFF	; 255
 2c4:	e1 f3       	breq	.-8      	; 0x2be <__mulsf3x+0x12>
 2c6:	62 9f       	mul	r22, r18
 2c8:	a1 2d       	mov	r26, r1
 2ca:	0f 92       	push	r0
 2cc:	bb 27       	eor	r27, r27
 2ce:	63 9f       	mul	r22, r19
 2d0:	a0 0d       	add	r26, r0
 2d2:	b1 1d       	adc	r27, r1
 2d4:	ee 27       	eor	r30, r30
 2d6:	72 9f       	mul	r23, r18
 2d8:	a0 0d       	add	r26, r0
 2da:	b1 1d       	adc	r27, r1
 2dc:	ee 1f       	adc	r30, r30
 2de:	af 93       	push	r26
 2e0:	aa 27       	eor	r26, r26
 2e2:	64 9f       	mul	r22, r20
 2e4:	b0 0d       	add	r27, r0
 2e6:	e1 1d       	adc	r30, r1
 2e8:	73 9f       	mul	r23, r19
 2ea:	b0 0d       	add	r27, r0
 2ec:	e1 1d       	adc	r30, r1
 2ee:	aa 1f       	adc	r26, r26
 2f0:	66 27       	eor	r22, r22
 2f2:	82 9f       	mul	r24, r18
 2f4:	b0 0d       	add	r27, r0
 2f6:	e1 1d       	adc	r30, r1
 2f8:	a6 1f       	adc	r26, r22
 2fa:	55 27       	eor	r21, r21
 2fc:	74 9f       	mul	r23, r20
 2fe:	e0 0d       	add	r30, r0
 300:	a1 1d       	adc	r26, r1
 302:	55 1f       	adc	r21, r21
 304:	83 9f       	mul	r24, r19
 306:	e0 0d       	add	r30, r0
 308:	a1 1d       	adc	r26, r1
 30a:	56 1f       	adc	r21, r22
 30c:	84 9f       	mul	r24, r20
 30e:	a0 0d       	add	r26, r0
 310:	51 1d       	adc	r21, r1
 312:	85 2f       	mov	r24, r21
 314:	7a 2f       	mov	r23, r26
 316:	6e 2f       	mov	r22, r30
 318:	1f 90       	pop	r1
 31a:	0f 90       	pop	r0
 31c:	88 23       	and	r24, r24
 31e:	1a f4       	brpl	.+6      	; 0x326 <__mulsf3x+0x7a>
 320:	93 95       	inc	r25
 322:	39 f4       	brne	.+14     	; 0x332 <__mulsf3x+0x86>
 324:	08 c0       	rjmp	.+16     	; 0x336 <__fp_nan>
 326:	00 0c       	add	r0, r0
 328:	11 1c       	adc	r1, r1
 32a:	bb 1f       	adc	r27, r27
 32c:	66 1f       	adc	r22, r22
 32e:	77 1f       	adc	r23, r23
 330:	88 1f       	adc	r24, r24
 332:	01 28       	or	r0, r1
 334:	08 95       	ret

00000336 <__fp_nan>:
 336:	9f ef       	ldi	r25, 0xFF	; 255
 338:	80 ec       	ldi	r24, 0xC0	; 192
 33a:	08 95       	ret

0000033c <_exit>:
 33c:	ff cf       	rjmp	.-2      	; 0x33c <_exit>
