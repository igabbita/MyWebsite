   1               		.file	"main.c"
   2               		.arch atmega8535
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  68               	.global	uart_init
  70               	uart_init:
  72               	.Ltext1:
   1:uart.h        **** /*uart.h
   2:uart.h        **** *******************************************************************************************
   3:uart.h        **** COPYRIGHT(C)Technophilia Systems
   4:uart.h        **** Date:...............31st May 2011
   5:uart.h        **** Author:.............Prasanta Kumar Nayak
   6:uart.h        **** Organization:.......Technophilia Syestems
   7:uart.h        **** compiler:...........WinAVR
   8:uart.h        **** 
   9:uart.h        **** Description:
  10:uart.h        **** 
  11:uart.h        **** 	This header file enables uart communication feature between two devices.
  12:uart.h        **** 	Include this header file in your C code. 
  13:uart.h        **** 	Call the uart_init() function before calling any other functions to initialize the uart.
  14:uart.h        **** 	
  15:uart.h        **** Functions:
  16:uart.h        **** 
  17:uart.h        **** 	uart_init();	Call this function before calling any other functions to initialize 
  18:uart.h        **** 					the uart communication.
  19:uart.h        **** 	uart_char();  	This function will transmit a single character on the UART.
  20:uart.h        **** 					For e.g. uart_char(0x61); will display A. 
  21:uart.h        **** 					Again uart_char('b'); will display b.
  22:uart.h        **** 	uart_string();	This function will display a string. 
  23:uart.h        **** 					An e.g. of this would be like uart_string("This is AVR");
  24:uart.h        **** 	uart_num();		This will show a 3-digit decimal value on the display
  25:uart.h        **** 					For e.g. uart_num(35); will displkay 035
  26:uart.h        **** 	uart_read();	This will show a 3-digit decimal value on the Display. 
  27:uart.h        **** 					For e.g. if we give uart_read(x); then x value will be displayed.
  28:uart.h        **** 
  29:uart.h        **** *******************************************************************************************/
  30:uart.h        **** 
  31:uart.h        **** #ifndef _UART_H_
  32:uart.h        **** #define _UART_H_
  33:uart.h        **** 
  34:uart.h        **** void uart_init()
  35:uart.h        **** {
  73               	logue end (size=0) */
  75               	.LM1:
  76               		out 43-0x20,__zero_reg__
  36:uart.h        **** 	UCSRA=0x00;
  77               	abn	68,0,37,.LM2-uart_init
  78               	.LM2:
  79 0000 1BB8      		ldi r24,lo8(24)
  37:uart.h        **** 	UCSRB=0x18;
  80               	t 42-0x20,r24
  82 0002 88E1      	.LM3:
  83 0004 8AB9      		ldi r24,lo8(-122)
  38:uart.h        **** 	UCSRC=0x86;
  84               	 64-0x20,r24
  86 0006 86E8      	.LM4:
  87 0008 80BD      		out 64-0x20,__zero_reg__
  39:uart.h        **** 	UBRRH=0x00;
  88               	abn	68,0,40,.LM5-uart_init
  89               	.LM5:
  90 000a 10BC      		ldi r24,lo8(103)
  40:uart.h        **** 	UBRRL=0x67;
  91               	t 41-0x20,r24
  92               	/* epilogue: frame size=0 */
  93 000c 87E6      		ret
  94 000e 89B9      	/* epilogue end (size=1) */
  95               	/* function uart_init size 9 (8) */
  97               	.Lscope0:
  99               	.global	uart_read
 101               	uart_read:
 103               	.LM6:
 104               	/* prologue: frame size=0 */
  41:uart.h        **** }
  42:uart.h        **** 
  43:uart.h        **** void uart_char(unsigned char uchar)
  44:uart.h        **** {
  45:uart.h        **** 	UDR=uchar;
  46:uart.h        **** 	while((UCSRA&0x40)==0x00);
  47:uart.h        **** 	delayuart(1000);
  48:uart.h        **** }
  49:uart.h        ****  
  50:uart.h        **** void uart_string(const unsigned char *ustring)
  51:uart.h        **** {
  52:uart.h        **** 	while ( *ustring )
  53:uart.h        **** 	{
  54:uart.h        **** 		UDR=*ustring++;
  55:uart.h        **** 		while((UCSRA&0x40)==0x00);
  56:uart.h        **** 		delayuart(1000);
  57:uart.h        **** 	}
  58:uart.h        **** }
  59:uart.h        ****  
  60:uart.h        **** void uart_num(unsigned char num)
  61:uart.h        **** {
  62:uart.h        ****     unsigned char H=0,T=0,O=0;
  63:uart.h        **** 	H=num/100;
  64:uart.h        **** 	T=(num - (H*100))/10;
  65:uart.h        **** 	O=(num - (H*100) - (T*10));
  66:uart.h        **** 	
  67:uart.h        **** 	uart_char(H+48);
  68:uart.h        **** 	uart_char(T+48);
  69:uart.h        **** 	uart_char(O+48);	
  70:uart.h        **** }
  71:uart.h        ****  
  72:uart.h        **** unsigned char uart_read()
  73:uart.h        **** {
 105               	d (size=0) */
 106               	.L5:
 108               	.LM7:
 109               		sbis 43-0x20,7
  74:uart.h        **** 	while((UCSRA&0x80)==0x00);
 110               	 .L5
 112 0012 5F9B      	.LM8:
 113 0014 00C0      		in r24,44-0x20
  75:uart.h        **** 	return UDR;
 114               	abn	68,0,76,.LM9-uart_read
 115               	.LM9:
 116 0016 8CB1      		clr r25
  76:uart.h        **** }
 117               	epilogue: frame size=0 */
 118               		ret
 119 0018 9927      	/* epilogue end (size=1) */
 120               	/* function uart_read size 5 (4) */
 122               	.Lscope1:
 125               	.global	delayuart
 127               	delayuart:
 129               	.LM10:
 130               	/* prologue: frame size=0 */
  77:uart.h        ****  
  78:uart.h        **** void delayuart(unsigned int delaytime)
  79:uart.h        **** {
 131               	d (size=0) */
 132               		ldi r18,lo8(0)
 133               		ldi r19,hi8(0)
 134               	.L11:
 136 001e 30E0      	.LM11:
 137               	/* #APP */
  80:uart.h        **** 	unsigned int dc;
  81:uart.h        **** 	for(dc=0;dc<=delaytime;dc++)
  82:uart.h        **** 	{
  83:uart.h        **** 		asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
 138               	op
 139               		nop
 140               		nop
 141 0020 0000      		nop
 142 0022 0000      		nop
 144 0026 0000      	.LM12:
 145 0028 0000      		nop
 146 002a 0000      		nop
  84:uart.h        **** 		asm("nop");asm("nop");asm("nop");asm("nop");
 147               	ame size=0 */
 148               	/* prologue end (size=0) */
 149 002c 0000      		ldi r18,lo8(0)
 150 002e 0000      		ldi r19,hi8(0)
 151 0030 0000      	.L11:
 153               	.LM11:
 154               	/* #APP */
 155               		nop
 156 0034 2F5F      		nop
 157 0036 3F4F      		nop
 158 0038 8217      		nop
 159 003a 9307      		nop
 160 003c 00F4      		nop
 162 003e 0895      	.LM12:
 163               		nop
 164               		nop
 165               		nop
 166               		nop
 168               	.LM13:
 169               	/* #NOAPP */
 170               		subi r18,lo8(-(1))
 171               		sbci r19,hi8(-(1))
 172               		cp r24,r18
 173               		cpc r25,r19
 174               		brsh .L11
 175               	/* epilogue: frame size=0 */
 176               		ret
 177               	/* epilogue end (size=1) */
 178 0040 CF93      	/* function delayuart size 28 (27) */
 183               	.Lscope2:
 186 0048 8CB9      	.global	uart_string
 188               	uart_string:
 190 004a 5E9B      	.LM14:
 191 004c 00C0      	/* prologue: frame size=0 */
 192               		push r28
 193               		push r29
 194 004e 2196      	/* prologue end (size=2) */
 195               		movw r28,r24
 196               		rjmp .L17
 197 0050 88EE      	.L18:
 199 0054 00D0      	.LM15:
 200               		out 44-0x20,r24
 201               	.L19:
 203 0056 8881      	.LM16:
 204 0058 8823      		sbis 43-0x20,6
 205 005a 01F4      		rjmp .L19
 207 005c DF91      	.LM17:
 208 005e CF91      		adiw r28,1
 210               	.LM18:
 211               		ldi r24,lo8(1000)
 212               		ldi r25,hi8(1000)
 213               		rcall delayuart
 214               	.L17:
 216               	.LM19:
 217               		ld r24,Y
 218               		tst r24
 219               		brne .L18
 220               	/* epilogue: frame size=0 */
 221               		pop r29
 222               		pop r28
 223               		ret
 224               	/* epilogue end (size=3) */
 225 0062 8CB9      	/* function uart_string size 17 (12) */
 227               	.Lscope3:
 230 0066 00C0      	.global	uart_char
 232               	uart_char:
 234 006a 93E0      	.LM20:
 235 006c 00D0      	/* prologue: frame size=0 */
 236               	/* prologue end (size=0) */
 238               	.LM21:
 239               		out 44-0x20,r24
 240               	.L26:
 242               	.LM22:
 243               		sbis 43-0x20,6
 244               		rjmp .L26
 246               	.LM23:
 247               		ldi r24,lo8(1000)
 248               		ldi r25,hi8(1000)
 249               		rcall delayuart
 250 0070 DF92      	/* epilogue: frame size=0 */
 251 0072 EF92      		ret
 252 0074 FF92      	/* epilogue end (size=1) */
 253 0076 0F93      	/* function uart_char size 7 (6) */
 255               	.Lscope4:
 258               	.global	uart_num
 260 007e 00D0      	uart_num:
 262               	.LM24:
 263               	/* prologue: frame size=0 */
 264 0082 84E6      		push r13
 265 0084 E82E      		push r14
 266 0086 2E9D      		push r15
 267 0088 7001      		push r16
 268 008a 1124      		push r17
 269 008c 8D2D      	/* prologue end (size=5) */
 270 008e 9927      		mov r13,r24
 272 0092 9F09      	.LM25:
 273 0094 6AE0      		ldi r22,lo8(100)
 274 0096 70E0      		rcall __udivmodqi4
 275 0098 00D0      		mov r18,r24
 277               	.LM26:
 278               		ldi r24,lo8(100)
 279 009c 822F      		mov r14,r24
 280 009e 805D      		mul r18,r14
 281 00a0 00D0      		movw r14,r0
 282               		clr r1
 283               		mov r24,r13
 284 00a2 802F      		clr r25
 285 00a4 805D      		sub r24,r14
 286 00a6 00D0      		sbc r25,r15
 287               		ldi r22,lo8(10)
 288               		ldi r23,hi8(10)
 289 00a8 DE18      		rcall __divmodhi4
 290 00aa 8AE0      		movw r16,r22
 292 00ae C001      	.LM27:
 293 00b0 1124      		mov r24,r18
 294 00b2 D81A      		subi r24,lo8(-(48))
 295 00b4 8D2D      		rcall uart_char
 297 00b8 00D0      	.LM28:
 298               		mov r24,r16
 299 00ba 1F91      		subi r24,lo8(-(48))
 300 00bc 0F91      		rcall uart_char
 302 00c0 EF90      	.LM29:
 303 00c2 DF90      		sub r13,r14
 304 00c4 0895      		ldi r24,lo8(10)
 305               		mul r16,r24
 306               		movw r24,r0
 307               		clr r1
 308               		sub r13,r24
 309               		mov r24,r13
 310               		subi r24,lo8(-(48))
 311               		rcall uart_char
 312               	/* epilogue: frame size=0 */
 313               		pop r17
 314               		pop r16
 315               		pop r15
 316               		pop r14
 317               		pop r13
   1:main.c        **** /***********************************************************************
   2:main.c        **** 
   3:main.c        **** CODE3.6: Program to send character and number through UART with header
   4:main.c        **** 
   5:main.c        **** ***********************************************************************
   6:main.c        **** COPYRIGHT(C)Technophilia Systems
   7:main.c        **** Date:...............31st May 2011
   8:main.c        **** Author:.............Prasanta Kumar Nayak
   9:main.c        **** Organization:.......Technophilia Syestems
  10:main.c        **** Target system:......AVR devlopment board s/n-107010
  11:main.c        **** Manufacturer:.......Technophilia Syestems
  12:main.c        **** Microcontroller:....ATmega-8535
  13:main.c        **** Clock:..............16mhz
  14:main.c        **** 
  15:main.c        **** ***********************************************************************/
  16:main.c        **** 
  17:main.c        **** #include<avr/io.h>		//This is the header file for AVR microcontroller
  18:main.c        **** #include"uart.h"		//This is the header file for UART Communication
  19:main.c        **** 
  20:main.c        **** int main(void)
  21:main.c        **** {
 318               	24,0,0,.Lscope5-uart_num
 319               	.Lscope5:
 321               	.global	main
  22:main.c        **** 	uart_init();		//UART initialization
 323               	.global	main
  23:main.c        **** 	uart_char(13);		//Carriage return value
 325               	0,0,main
 326               	.global	main
 328 00ca 00D0      	main:
  24:main.c        **** 	uart_char('S'); 	//Function to print a character on the Uart
 329               	n
 330               	.global	main
 332 00ce 00D0      	main:
  25:main.c        **** 	uart_char('\n');	//New line
 333               	n
 334               	.global	main
 336 00d2 00D0      	main:
  26:main.c        **** 	uart_char(13);		//Carriage return value
 337               	n
 338               	.global	main
 340 00d6 00D0      	main:
  27:main.c        **** 	uart_num(157);		//Function to print a number on the Uart
 341               	n
 342               	.global	main
 344 00da 00D0      	main:
  28:main.c        **** 	uart_char('\n');	//New line
 345               	n
 346               	.global	main
 348 00de 00D0      	main:
 350 00e0 00C0      	.Ltext2:
 352               	.LM30:
 353               	/* prologue: frame size=0 */
 354               	/* prologue end (size=0) */
 356               	.LM31:
 357               		rcall uart_init
 359               	.LM32:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:3      *ABS*:0000003f __SREG__
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:4      *ABS*:0000003e __SP_H__
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:5      *ABS*:0000003d __SP_L__
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:6      *ABS*:00000000 __tmp_reg__
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:7      *ABS*:00000001 __zero_reg__
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:70     .text:00000000 uart_init
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:104    .text:00000012 uart_read
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:130    .text:0000001c delayuart
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:174    .text:00000040 uart_string
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:218    .text:00000062 uart_char
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:246    .text:00000070 uart_num
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccJ46ioQ.s:315    .text:000000c6 main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__udivmodqi4
__divmodhi4
