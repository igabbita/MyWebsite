   1               		.file	"main.c"
   2               		.arch atmega8535
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  68               	.global	uart_init
  70               	uart_init:
  72               	.Ltext1:
   1:uart.h        **** /*uart.h
   2:uart.h        **** *******************************************************************************************
   3:uart.h        **** COPYRIGHT(C)Technophilia Systems
   4:uart.h        **** Date:...............31st May 2011
   5:uart.h        **** Author:.............Prasanta Kumar Nayak
   6:uart.h        **** Organization:.......Technophilia Syestems
   7:uart.h        **** compiler:...........WinAVR
   8:uart.h        **** 
   9:uart.h        **** Description:
  10:uart.h        **** 
  11:uart.h        **** 	This header file enables uart communication feature between two devices.
  12:uart.h        **** 	Include this header file in your C code. 
  13:uart.h        **** 	Call the uart_init() function before calling any other functions to initialize the uart.
  14:uart.h        **** 	
  15:uart.h        **** Functions:
  16:uart.h        **** 
  17:uart.h        **** 	uart_init();	Call this function before calling any other functions to initialize 
  18:uart.h        **** 					the uart communication.
  19:uart.h        **** 	uart_char();  	This function will transmit a single character on the UART.
  20:uart.h        **** 					For e.g. uart_char(0x61); will display A. 
  21:uart.h        **** 					Again uart_char('b'); will display b.
  22:uart.h        **** 	uart_string();	This function will display a string. 
  23:uart.h        **** 					An e.g. of this would be like uart_string("This is AVR");
  24:uart.h        **** 	uart_num();		This will show a 3-digit decimal value on the display
  25:uart.h        **** 					For e.g. uart_num(35); will displkay 035
  26:uart.h        **** 	uart_read();	This will show a 3-digit decimal value on the Display. 
  27:uart.h        **** 					For e.g. if we give uart_read(x); then x value will be displayed.
  28:uart.h        **** 
  29:uart.h        **** *******************************************************************************************/
  30:uart.h        **** 
  31:uart.h        **** #ifndef _UART_H_
  32:uart.h        **** #define _UART_H_
  33:uart.h        **** 
  34:uart.h        **** void uart_init()
  35:uart.h        **** {
  73               	logue end (size=0) */
  75               	.LM1:
  76               		out 43-0x20,__zero_reg__
  36:uart.h        **** 	UCSRA=0x00;
  77               	abn	68,0,37,.LM2-uart_init
  78               	.LM2:
  79 0000 1BB8      		ldi r24,lo8(24)
  37:uart.h        **** 	UCSRB=0x18;
  80               	t 42-0x20,r24
  82 0002 88E1      	.LM3:
  83 0004 8AB9      		ldi r24,lo8(-122)
  38:uart.h        **** 	UCSRC=0x86;
  84               	 64-0x20,r24
  86 0006 86E8      	.LM4:
  87 0008 80BD      		out 64-0x20,__zero_reg__
  39:uart.h        **** 	UBRRH=0x00;
  88               	abn	68,0,40,.LM5-uart_init
  89               	.LM5:
  90 000a 10BC      		ldi r24,lo8(103)
  40:uart.h        **** 	UBRRL=0x67;
  91               	t 41-0x20,r24
  92               	/* epilogue: frame size=0 */
  93 000c 87E6      		ret
  94 000e 89B9      	/* epilogue end (size=1) */
  95               	/* function uart_init size 9 (8) */
  97               	.Lscope0:
  99               	.global	uart_read
 101               	uart_read:
 103               	.LM6:
 104               	/* prologue: frame size=0 */
  41:uart.h        **** }
  42:uart.h        **** 
  43:uart.h        **** void uart_char(unsigned char uchar)
  44:uart.h        **** {
  45:uart.h        **** 	UDR=uchar;
  46:uart.h        **** 	while((UCSRA&0x40)==0x00);
  47:uart.h        **** 	delayuart(1000);
  48:uart.h        **** }
  49:uart.h        ****  
  50:uart.h        **** void uart_string(const unsigned char *ustring)
  51:uart.h        **** {
  52:uart.h        **** 	while ( *ustring )
  53:uart.h        **** 	{
  54:uart.h        **** 		UDR=*ustring++;
  55:uart.h        **** 		while((UCSRA&0x40)==0x00);
  56:uart.h        **** 		delayuart(1000);
  57:uart.h        **** 	}
  58:uart.h        **** }
  59:uart.h        ****  
  60:uart.h        **** void uart_num(unsigned char num)
  61:uart.h        **** {
  62:uart.h        ****     unsigned char H=0,T=0,O=0;
  63:uart.h        **** 	H=num/100;
  64:uart.h        **** 	T=(num - (H*100))/10;
  65:uart.h        **** 	O=(num - (H*100) - (T*10));
  66:uart.h        **** 	
  67:uart.h        **** 	uart_char(H+48);
  68:uart.h        **** 	uart_char(T+48);
  69:uart.h        **** 	uart_char(O+48);	
  70:uart.h        **** }
  71:uart.h        ****  
  72:uart.h        **** unsigned char uart_read()
  73:uart.h        **** {
 105               	d (size=0) */
 106               	.L5:
 108               	.LM7:
 109               		sbis 43-0x20,7
  74:uart.h        **** 	while((UCSRA&0x80)==0x00);
 110               	 .L5
 112 0012 5F9B      	.LM8:
 113 0014 00C0      		in r24,44-0x20
  75:uart.h        **** 	return UDR;
 114               	abn	68,0,76,.LM9-uart_read
 115               	.LM9:
 116 0016 8CB1      		clr r25
  76:uart.h        **** }
 117               	epilogue: frame size=0 */
 118               		ret
 119 0018 9927      	/* epilogue end (size=1) */
 120               	/* function uart_read size 5 (4) */
 122               	.Lscope1:
 125               	.global	delayuart
 127               	delayuart:
 129               	.LM10:
 130               	/* prologue: frame size=0 */
  77:uart.h        ****  
  78:uart.h        **** void delayuart(unsigned int delaytime)
  79:uart.h        **** {
 131               	d (size=0) */
 132               		ldi r18,lo8(0)
 133               		ldi r19,hi8(0)
 134               	.L11:
 136 001e 30E0      	.LM11:
 137               	/* #APP */
  80:uart.h        **** 	unsigned int dc;
  81:uart.h        **** 	for(dc=0;dc<=delaytime;dc++)
  82:uart.h        **** 	{
  83:uart.h        **** 		asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");
 138               	op
 139               		nop
 140               		nop
 141 0020 0000      		nop
 142 0022 0000      		nop
 144 0026 0000      	.LM12:
 145 0028 0000      		nop
 146 002a 0000      		nop
  84:uart.h        **** 		asm("nop");asm("nop");asm("nop");asm("nop");
 147               	
 149 002c 0000      	.LM13:
 150 002e 0000      	/* #NOAPP */
 151 0030 0000      		subi r18,lo8(-(1))
 152 0032 0000      		sbci r19,hi8(-(1))
 153               		cp r24,r18
 154               		cpc r25,r19
 155               		brsh .L11
 156 0034 2F5F      	/* epilogue: frame size=0 */
 157 0036 3F4F      		ret
 158 0038 8217      	/* epilogue end (size=1) */
 159 003a 9307      	/* function delayuart size 28 (27) */
 164               	.Lscope2:
 167               	.global	uart_string
 169               	uart_string:
 171               	.LM14:
 172               	/* prologue: frame size=0 */
 173               		push r28
 174               		push r29
 175               	/* prologue end (size=2) */
 176               		movw r28,r24
 177               		rjmp .L17
 178 0040 CF93      	.L18:
 180               	.LM15:
 181 0044 EC01      		out 44-0x20,r24
 182 0046 00C0      	.L19:
 184               	.LM16:
 185               		sbis 43-0x20,6
 186 0048 8CB9      		rjmp .L19
 188               	.LM17:
 189               		adiw r28,1
 191 004c 00C0      	.LM18:
 192               		ldi r24,lo8(1000)
 193               		ldi r25,hi8(1000)
 194 004e 2196      		rcall delayuart
 195               	.L17:
 197 0050 88EE      	.LM19:
 198 0052 93E0      		ld r24,Y
 199 0054 00D0      		tst r24
 200               		brne .L18
 201               	/* epilogue: frame size=0 */
 202               		pop r29
 203 0056 8881      		pop r28
 204 0058 8823      		ret
 205 005a 01F4      	/* epilogue end (size=3) */
 206               	/* function uart_string size 17 (12) */
 208 005e CF91      	.Lscope3:
 211               	.global	uart_char
 213               	uart_char:
 215               	.LM20:
 216               	/* prologue: frame size=0 */
 217               	/* prologue end (size=0) */
 219               	.LM21:
 220               		out 44-0x20,r24
 221               	.L26:
 223               	.LM22:
 224               		sbis 43-0x20,6
 225 0062 8CB9      		rjmp .L26
 227               	.LM23:
 228               		ldi r24,lo8(1000)
 229 0064 5E9B      		ldi r25,hi8(1000)
 230 0066 00C0      		rcall delayuart
 231               	/* epilogue: frame size=0 */
 232               		ret
 233 0068 88EE      	/* epilogue end (size=1) */
 234 006a 93E0      	/* function uart_char size 7 (6) */
 236               	.Lscope4:
 239               	.global	uart_num
 241               	uart_num:
 243               	.LM24:
 244               	/* prologue: frame size=0 */
 245               		push r13
 246               		push r14
 247               		push r15
 248               		push r16
 249               		push r17
 250 0070 DF92      	/* prologue end (size=5) */
 251 0072 EF92      		mov r13,r24
 253 0076 0F93      	.LM25:
 254 0078 1F93      		ldi r22,lo8(100)
 255               		rcall __udivmodqi4
 256 007a D82E      		mov r18,r24
 258               	.LM26:
 259 007c 64E6      		ldi r24,lo8(100)
 260 007e 00D0      		mov r14,r24
 261 0080 282F      		mul r18,r14
 262               		movw r14,r0
 263               		clr r1
 264 0082 84E6      		mov r24,r13
 265 0084 E82E      		clr r25
 266 0086 2E9D      		sub r24,r14
 267 0088 7001      		sbc r25,r15
 268 008a 1124      		ldi r22,lo8(10)
 269 008c 8D2D      		ldi r23,hi8(10)
 270 008e 9927      		rcall __divmodhi4
 271 0090 8E19      		movw r16,r22
 273 0094 6AE0      	.LM27:
 274 0096 70E0      		mov r24,r18
 275 0098 00D0      		subi r24,lo8(-(48))
 276 009a 8B01      		rcall uart_char
 278               	.LM28:
 279 009c 822F      		mov r24,r16
 280 009e 805D      		subi r24,lo8(-(48))
 281 00a0 00D0      		rcall uart_char
 283               	.LM29:
 284 00a2 802F      		sub r13,r14
 285 00a4 805D      		ldi r24,lo8(10)
 286 00a6 00D0      		mul r16,r24
 287               		movw r24,r0
 288               		clr r1
 289 00a8 DE18      		sub r13,r24
 290 00aa 8AE0      		mov r24,r13
 291 00ac 089F      		subi r24,lo8(-(48))
 292 00ae C001      		rcall uart_char
 293 00b0 1124      	/* epilogue: frame size=0 */
 294 00b2 D81A      		pop r17
 295 00b4 8D2D      		pop r16
 296 00b6 805D      		pop r15
 297 00b8 00D0      		pop r14
 298               		pop r13
 299 00ba 1F91      		ret
 300 00bc 0F91      	/* epilogue end (size=6) */
 301 00be FF90      	/* function uart_num size 43 (32) */
 306               	.Lscope5:
 308               	.global	main
 310               	main:
 312               	.Ltext2:
 314               	.LM30:
 315               	/* prologue: frame size=0 */
 316               		push r17
 317               	/* prologue end (size=1) */
   1:main.c        **** /***********************************************************************
   2:main.c        **** 
   3:main.c        **** CODE3.7: Program to Display values for number of times switch pressed UART
   4:main.c        **** 
   5:main.c        **** ***********************************************************************
   6:main.c        **** COPYRIGHT(C)Technophilia Systems
   7:main.c        **** Date:...............31st May 2011
   8:main.c        **** Author:.............Prasanta Kumar Nayak
   9:main.c        **** Organization:.......Technophilia Syestems
  10:main.c        **** Target system:......AVR devlopment board s/n-107010
  11:main.c        **** Manufacturer:.......Technophilia Syestems
  12:main.c        **** Microcontroller:....ATmega-8535
  13:main.c        **** Clock:..............16mhz
  14:main.c        **** 
  15:main.c        **** ***********************************************************************/
  16:main.c        **** 
  17:main.c        **** #include<avr/io.h>		//This is the header file for AVR microcontroller
  18:main.c        **** #include"uart.h"		//This is the header file for UART Communication
  19:main.c        **** 
  20:main.c        **** int main(void)
  21:main.c        **** {
 318               	=0 */
 319               		push r17
 320               	/* prologue end (size=1) */
 322               	.LM31:
  22:main.c        **** 	unsigned char x;
  23:main.c        **** 	uart_init();
 323               	e=1) */
 325 00c8 00D0      	.LM31:
  24:main.c        **** 	DDRA=0x00;
 326               	e=1) */
 328 00ca 1ABA      	.LM31:
  25:main.c        **** 	PORTA=0x10;
 329               	e=1) */
 331 00cc 80E1      	.LM31:
 332 00ce 8BBB      		rcall uart_init
  26:main.c        **** 	
  27:main.c        **** 	while(1)
  28:main.c        **** 	{
  29:main.c        **** 		if((PINA & 0x10)==0x00)
 334               	ll uart_init
 336 00d0 CC99      	.LM32:
 337 00d2 00C0      		out 58-0x20,__zero_reg__
  30:main.c        **** 		{
  31:main.c        **** 			while((PINA & 0x10)==0x00);
 339               	ero_reg__
 341 00d4 CC9B      	.LM33:
 342 00d6 00C0      		ldi r24,lo8(16)
  32:main.c        **** 			x++;
 343               	.LM33-main
 344               	.LM33:
 345 00d8 1F5F      		ldi r24,lo8(16)
  33:main.c        **** 			uart_num(x);
 346               	.LM33-main
 347               	.LM33:
 348 00da 812F      		ldi r24,lo8(16)
 349 00dc 00D0      		out 59-0x20,r24
  34:main.c        **** 			uart_char(13);
 350               		ldi r24,lo8(16)
 351               		out 59-0x20,r24
 352 00de 8DE0      	.L46:
 354 00e2 00C0      	.LM34:
 355               		sbic 57-0x20,4
 356               		rjmp .L46
 357               	.L41:
 359               	.LM35:
 360               		sbis 57-0x20,4
 361               		rjmp .L41
 363               	.LM36:
 364               		subi r17,lo8(-(1))
 366               	.LM37:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:3      *ABS*:0000003f __SREG__
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:4      *ABS*:0000003e __SP_H__
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:5      *ABS*:0000003d __SP_L__
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:6      *ABS*:00000000 __tmp_reg__
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:7      *ABS*:00000001 __zero_reg__
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:70     .text:00000000 uart_init
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:104    .text:00000012 uart_read
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:130    .text:0000001c delayuart
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:174    .text:00000040 uart_string
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:218    .text:00000062 uart_char
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:246    .text:00000070 uart_num
C:\DOCUME~1\TECHNO~1\LOCALS~1\Temp/ccAvGVpG.s:315    .text:000000c6 main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__udivmodqi4
__divmodhi4
